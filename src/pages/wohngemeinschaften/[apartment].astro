---
import Layout from "../../layouts/Layout.astro";
import { getCollection } from "astro:content";
const base = import.meta.env.BASE_URL;

export async function getStaticPaths() {
  const apartments = await getCollection("apartments");
  return apartments.map(({ slug }) => ({ params: { apartment: slug } }));
}

const { apartment } = Astro.params;
const apartments = await getCollection("apartments");
const apt = apartments.find(a => a.slug === apartment);

// Rooms linked by apartment slug (e.g., "apartment-3")
const rooms = await getCollection("rooms", r => r.data.apartment === apartment);
---

<Layout title={apt?.data.title ?? "Wohngemeinschaft"}>
  <div class="container">

    <section class="apartment-header">
      <div class="apartment-image">
        {apt?.data.floorplan ? (
          <img src={`${base}${apt.data.floorplan}`} alt={apt.data.title} />
        ) : (
          <div class="placeholder">[Kein Plan vorhanden]</div>
        )}
      </div>

      <div class="apartment-details">
        <h1>{apt?.data.title}</h1>
        {apt?.data.details && (
          <p class="details">{apt.data.details.join(" / ")}</p>
        )}
        <div class="description">
          {apt?.body ? <Fragment set:html={apt.body} /> : null}
        </div>
      </div>
    </section>

    <section class="rooms-section">
      <h2>Zimmer</h2>
      <div class="rooms-grid">
        {rooms.map(({ data, slug }) => (
          <a href={`${base}zimmer/${slug}/`} class="room-card">
            {data.images && data.images.length > 0 ? (
              <img src={`${base}${data.images[0]}`} alt={data.title} />
            ) : (
              <div class="room-placeholder">[Kein Bild verf√ºgbar]</div>
            )}
            <p><strong>&gt; {data.title}</strong></p>
          </a>
        ))}
      </div>
    </section>

  </div>
</Layout>

<style>
/* Page layout container */
.container {
  max-width: 1100px;
  margin: 0 auto;
  padding: 0 1.25rem;
}

/* Apartment header with image + details */
.apartment-header {
  display: flex;
  flex-wrap: wrap;
  align-items: flex-start;
  justify-content: center;
  gap: 2rem;
  margin: 2rem 0;
}

/* Floorplan area */
.apartment-image {
  display: flex;
  justify-content: center;
  flex: 0 1 600px;
}
.apartment-image img {
  max-width: 600px;
  width: 100%;
  border: 1px solid #ccc;
  box-shadow: 0 2px 6px rgba(0,0,0,0.15);
}

/* Placeholder for missing floorplans */
.placeholder {
  width: 600px;
  height: 400px;
  background: #f0f0f0;
  display: flex;
  align-items: center;
  justify-content: center;
  color: #888;
  border: 1px dashed #ccc;
}

/* Apartment text section */
.apartment-details {
  flex: 1 1 300px;
  min-width: 260px;
}

.apartment-details h1 {
  font-size: 1.5rem;
  font-weight: bold;
}

.details {
  font-weight: bold;
  margin-top: 0.5rem;
  margin-bottom: 1rem;
}

/* Rooms section */
.rooms-section { margin-top: 3rem; }

/* Left-aligned, wrapping row of cards */
.rooms-grid {
  display: flex;
  flex-wrap: wrap;
  gap: 1.5rem;
  justify-content: flex-start; /* <-- left align inside the centered container */
}

/* Fixed card width so rows look tidy */
.room-card {
  text-decoration: none;
  color: black;
  text-align: center;
  width: 220px;               /* <-- fixed width for neat wrapping */
}

.room-card img,
.room-placeholder {
  width: 100%;
}

.room-placeholder {
  aspect-ratio: 4/3;
  background: #f0f0f0;
  color: #888;
  border: 1px dashed #ccc;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 0.9rem;
}

.room-card p {
  margin-top: 0.5rem;
  font-size: 0.9rem;
}

/* Responsive stacking */
@media (max-width: 900px) {
  .apartment-image { flex-basis: 100%; }
  .apartment-details { flex-basis: 100%; }
}
</style>
