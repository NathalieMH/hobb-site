---
import WelcomeLayout from "../layouts/WelcomeLayout.astro";
const base = import.meta.env.BASE_URL; // works locally & on GitHub Pages subpaths
---
<WelcomeLayout title="HoBB">
  <div class="page">
    <div class="frame">
      <!-- The inner border is drawn by ::before. -->
      <!-- This absolutely positioned box is our content area ("canvas") -->
      <div class="canvas">
        <!-- hero logo -->
        <img
          class="logo-img"
          src={`${base}logo_noborders.png`}
          alt="HoBB"
          width="2123"
          height="656"
          loading="eager"
          fetchpriority="high"
          decoding="async"
        />

        <hr class="rule" />

        <!-- right-aligned taglines; width matches the rule -->
        <div class="taglines">
          <p class="tagline de">Studenten-Wohngemeinschaften bei der FU</p>
          <p class="tagline en">Student Shared Apartments close to FU</p>
        </div>
      </div>

      <!-- Button inside the bottom gutter, centered -->
      <div class="bottom-gutter">
        <a class="cta" href={`${base}home/`} aria-label="Enter HoBB">
          enter HoBB
        </a>
      </div>
    </div>
  </div>

  <style>
    /* Page baseline */
    .page {
      min-height: 100vh;
      display: grid;
      place-items: center;
      background: #000;
      color: #fff;
      font-family: ui-serif, "Playfair Display", Georgia, "Times New Roman", serif;
    }

    /* --- DOUBLE BORDER BOX ---------------------------------------------- */
    .frame {
      width: min(92vw, 1100px);
      height: min(86vh, 640px);
      border: 3px solid #fff; /* outer border */
      --border-gap: 10px;     /* space between the two borders */
      --gutter: clamp(24px, 5vw, 56px); /* equal space from inner border to content */
      position: relative;
    }
    .frame::before {
      content: "";
      position: absolute;
      inset: var(--border-gap);
      border: 3px solid #fff; /* inner border */
      pointer-events: none;
    }

    /* --- CONTENT BOX ("canvas") ----------------------------------------- */
    .canvas {
      position: absolute;
      inset:
        calc(var(--border-gap) + var(--gutter))
        calc(var(--border-gap) + var(--gutter))
        calc(var(--border-gap) + var(--gutter))
        calc(var(--border-gap) + var(--gutter));
      display: grid;
      justify-items: center;
      align-content: center;
      gap: clamp(0.9rem, 2.4vw, 1.6rem);
    }

    /* --- BOTTOM GUTTER --------------------------------------------------- */
    .bottom-gutter {
      position: absolute;
      left: calc(var(--border-gap) + var(--gutter));
      right: calc(var(--border-gap) + var(--gutter));
      bottom: var(--border-gap);
      height: calc(var(--gutter) + clamp(20px, 2vh, 28px)); /* extra whitespace below button */
      display: grid;
      place-items: center;
      padding-bottom: clamp(8px, 1.6vh, 22px); /* even more extra whitespace below button */
      pointer-events: none;
    }

    /* --- LOGO (â‰ˆ80% of prior cap) -------------------------------------- */
    .logo-img {
      max-width: min(62.4vw, 784px);
      max-height: min(28.8vh, 336px);
      width: auto;
      height: auto;
      object-fit: contain;
      display: block;
    }

    /* --- RULE + TAGLINES ------------------------------------------------ */
    .rule {
      width: min(82%, 820px);
      height: 3px;
      background: #fff;
      border: 0;
      margin: 0 auto;
    }

    /* Taglines share width/centering with the rule */
    .taglines {
      width: min(82%, 820px);
      margin: 0 auto;
      text-align: right;
      container-type: inline-size; /* enable container query units */
    }

    .tagline {
      margin: .35rem 0;
      /* Fluid with container width; the script below will shrink further if needed */
      font-size: clamp(0.7rem, 3.5cqi, 1.06rem);
      opacity: .95;
      white-space: nowrap;   /* keep on one line */
      /* REMOVE ellipsis so we can always show the full line */
      overflow: visible;
      text-overflow: clip;
    }

    /* --- CTA ------------------------------------------------------------ */
    .cta {
      pointer-events: auto;
      font-size: clamp(.95rem, 1.6vw, 1.1rem);
      text-decoration: none;
      padding: .65rem 1.1rem;
      border: 2px solid #fff;
      border-radius: 4px;
      display: inline-block;
      color: #fff;
      background: transparent;
      transition: background-color .2s ease, color .2s ease, opacity .2s ease;
    }
    .cta:hover,
    .cta:focus-visible {
      background: #fff;
      color: #000;
      outline: none;
    }

    /* Short screens */
    @media (max-height: 560px) {
      .frame { height: 82vh; }
      .rule { height: 2px; }
      .logo-img { max-height: min(26vh, 300px); }
    }
    @media (prefers-reduced-motion: reduce) {
      .cta { transition: none; }
    }
  </style>

  <!-- Always-fit script: shrinks tagline font until each line fits its container -->
  <script is:inline>
    const box = document.querySelector('.taglines');
    if (box) {
      const lines = box.querySelectorAll('.tagline');

      function fits(el) { return el.scrollWidth <= box.clientWidth; }

      function fitLine(el) {
        // Start from computed size; shrink down to minPx as needed
        let hi = parseFloat(getComputedStyle(el).fontSize) || 16; // px
        let lo = 6; // minimum readable size in px (adjust if you want smaller)
        // If it already fits, keep CSS-driven size
        if (fits(el)) return;

        // Binary search down until it fits
        for (let i = 0; i < 20 && hi - lo > 0.25; i++) {
          const mid = (hi + lo) / 2;
          el.style.fontSize = mid + 'px';
          if (fits(el)) {
            hi = mid;
          } else {
            lo = mid;
          }
        }
        el.style.fontSize = hi + 'px';
      }

      function fitAll() {
        // Reset to CSS (so cqi scaling can increase size on wider screens)
        lines.forEach(el => el.style.fontSize = '');
        lines.forEach(fitLine);
      }

      // Run on load and whenever viewport/container changes
      const ro = new ResizeObserver(fitAll);
      ro.observe(document.documentElement);
      window.addEventListener('load', fitAll);
    }
  </script>
</WelcomeLayout>
